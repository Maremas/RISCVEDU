* {
  font-family: Montserrat, sans-serif;
}

body {
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
  margin: 0;
}

footer {
  height: fit-content;
  padding: 1%;
  background-color: hsl(0 10% 5%);
  color: hsl(0 10% 90%);
  a {
    color: inherit; /* no different color for link */
  }
}

.previous {
  background-color: orange;
  color: white;
  border-radius: 3%;
  text-decoration: none;
  width: 30%;
  padding: 1%;
  text-align: center;
  float: left;

  &:hover {
    background-color: #ddd;
    color: black;
  }
}

.next {
  background-color: orange;
  color: white;
  border-radius: 3%;
  text-decoration: none;
  text-align: center;
  width: 30%;
  padding: 1%;
  float: right;

  &:hover {
    background-color: #ddd;
    color: black;
  }
}

:root {
  --clr-back: #ddd;
}

.nav {
  /* declaration of navbar animation parameters */
  --_animationStartsAfter: 100px;
  --_animationDistance: 250px;
  --_surfaceColorStart: hsl(0 10% 5%);
  --_surfaceColorEnd: hsl(0 50% 100%);
  --_textColorStart: hsl(0 10% 90%);
  --_textColorEnd: hsl(0 10% 10%);
  color: var(--_textColorStart);
  background-color: var(--_surfaceColorStart);
  padding: 0 1%; /* padding: top/bottom left/right */
  font-size: 1.2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-flow: row wrap;
  position: sticky;
  z-index: 1000;
  top: 0;
  animation: stickyNav linear forwards;

  /* if browser supports animation-timeline, enable animation */
  @supports (animation-timeline: view()) {
    animation-timeline: view();
    animation-range-start: calc(100vh + var(--_animationStartsAfter));
    animation-range-end: calc(
      100vh + var(--_animationStartsAfter) + var(--_animationDistance)
    );
  }
  /* animation of  navbar logo, but only change one color filling */
  .logo {
    height: 20px;
    /*.st0 {
      fill: currentColor;
    }*/
    .st1 {
      fill: currentColor;
    }
  }

  a {
    color: inherit;
    font-weight: bold;
    text-decoration: none;

    /* make clickable text area bigger by creating box around it*/
    display: inline-block;
    position: relative;
    z-index: 1;
    padding: 10px;
    margin: -10px;

    &:hover,
    &:focus {
      color: grey;
      text-decoration: none;
    }
  }

  .navlist {
    display: flex;
    li {
      list-style: none;
      position: relative;
      padding: 0 10px; /* padding: top/bottom left/right */

      ul {
        display: none;
        position: absolute;
      }
    }

    .selected {
      color: orange;
    }

    /*dropdown menu organized as unordered list nav li ul li ul*/
    li:hover ul {
      display: flex;
      position: absolute;
      flex-direction: column;
      padding: 10px;
      left: -10px;
      gap: 10px;
      color: var(--_textColorStart);
      background-color: var(--_surfaceColorStart);
      animation: stickyNav linear forwards;

      @supports (animation-timeline: view()) {
        animation-timeline: view();
        animation-range-start: calc(100vh + var(--_animationStartsAfter));
        animation-range-end: calc(
          100vh + var(--_animationStartsAfter) + var(--_animationDistance)
        );
      }
    }
  }
}

@keyframes stickyNav {
  100% {
    color: var(--_textColorEnd);
    background-color: var(--_surfaceColorEnd);
    box-shadow: 0 0 0.75rem hsl(0 0% 0% / 0.3);
  }
}

/*GRID CONTAINER*/
.gridcontainerIntro {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  /* gap: 1rem;
  padding-block: 2rem; */
  grid-auto-columns: 1fr;
  grid-template-areas:
    "one"
    "two";
}
.gridcontainerPipeline {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  /* gap: 1rem;
  padding-block: 2rem; */
  grid-auto-columns: 1fr;
  grid-template-areas:
    "one"
    "two"
    "three"
    "four"
    "five"
    "six"
    "seven"
    "eight"
    "nine"
    "ten"
    "eleven";
}

.gridcontainerDatapath {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  gap: 1rem;
  grid-auto-columns: 1fr;
  padding-block: 2rem;
  grid-template-areas:
    "one"
    "two"
    "three"
    "four"
    "five"
    "six"
    "seven";
}

.gridcontainerHazards {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  gap: 1rem;
  grid-auto-columns: 1fr;
  padding-block: 2rem;
  grid-template-areas:
    "one"
    "two";
}

.gridcontainerStructHazards {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  /* gap: 1rem;
  padding-block: 2rem; */
  grid-auto-columns: 1fr;
  grid-template-areas:
    "one"
    "two"
    "three";
}

.gridcontainerDataHazards {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  /* gap: 1rem;
  padding-block: 2rem; */
  grid-auto-columns: 1fr;
  grid-template-areas:
    "one one"
    "two two"
    "three three"
    "four four"
    "five five"
    "six seven"
    "eight eight"
    "nine nine"
    "ten ten";
}

.gridcontainerControlHazards {
  margin-left: 5%;
  margin-right: 5%;
  display: grid;
  /* gap: 1rem;
  padding-block: 2rem; */
  grid-auto-columns: 1fr;
  grid-template-areas:
    "one"
    "two";
}

/* threshold for displaying grid items in desktop layout*/
@media screen and (max-width: 800px) {
  .gridcontainerIntro,
  .gridcontainerPipeline,
  .gridcontainerDatapath,
  .gridcontainerHazards,
  .gridcontainerStructHazards,
  .gridcontainerDataHazards,
  .gridcontainerControlHazards {
    grid-template-areas:
      "one"
      "two"
      "three"
      "four"
      "five"
      "six"
      "seven"
      "eight"
      "nine"
      "ten"
      "eleven"
      "twelve";
  }
}

.griditemPipeline,
.griditemDatapath,
.griditemHazards,
.griditemStructHazards,
.griditemDataHazards,
.griditemControlHazards {
  color: black;
  padding: 1rem;
  /* border-radius: 0rem; */
  svg {
    width: 100%;
  }
}

.griditemIntro:nth-child(1) {
  grid-area: one;
}
.griditemIntro:nth-child(2) {
  grid-area: two;
}

.griditemPipeline:nth-child(1) {
  grid-area: one;
}
.griditemPipeline:nth-child(2) {
  grid-area: two;
}
.griditemPipeline:nth-child(3) {
  grid-area: three;
}
.griditemPipeline:nth-child(4) {
  grid-area: four;
}
.griditemPipeline:nth-child(5) {
  grid-area: five;
}
.griditemPipeline:nth-child(6) {
  grid-area: six;
}
.griditemPipeline:nth-child(7) {
  grid-area: seven;
}
.griditemPipeline:nth-child(8) {
  grid-area: eight;
}
.griditemPipeline:nth-child(9) {
  grid-area: nine;
}
.griditemPipeline:nth-child(10) {
  grid-area: ten;
}
.griditemPipeline:nth-child(11) {
  grid-area: eleven;
}

.griditemDatapath:nth-child(1) {
  grid-area: one;
}
.griditemDatapath:nth-child(2) {
  grid-area: two;
}
.griditemDatapath:nth-child(3) {
  grid-area: three;
}
.griditemDatapath:nth-child(4) {
  grid-area: four;
}
.griditemDatapath:nth-child(5) {
  grid-area: five;
}
.griditemDatapath:nth-child(6) {
  grid-area: six;
}
.griditemDatapath:nth-child(7) {
  grid-area: seven;
}

.griditemHazards:nth-child(1) {
  grid-area: one;
}
.griditemHazards:nth-child(2) {
  grid-area: two;
}

.griditemStructHazards:nth-child(1) {
  grid-area: one;
}
.griditemStructHazards:nth-child(2) {
  grid-area: two;
}
.griditemStructHazards:nth-child(3) {
  grid-area: three;
}

.griditemDataHazards:nth-child(1) {
  grid-area: one;
}
.griditemDataHazards:nth-child(2) {
  grid-area: two;
}
.griditemDataHazards:nth-child(3) {
  grid-area: three;
}
.griditemDataHazards:nth-child(4) {
  grid-area: four;
}
.griditemDataHazards:nth-child(5) {
  grid-area: five;
}
.griditemDataHazards:nth-child(6) {
  grid-area: six;
}
.griditemDataHazards:nth-child(7) {
  grid-area: seven;
}
.griditemDataHazards:nth-child(8) {
  grid-area: eight;
}
.griditemDataHazards:nth-child(9) {
  grid-area: nine;
}
.griditemDataHazards:nth-child(10) {
  grid-area: ten;
}

.griditemControlHazards:nth-child(1) {
  grid-area: one;
}
.griditemControlHazards:nth-child(2) {
  grid-area: two;
}

.exercise {
  background-color: lightgrey;
  border-radius: 1rem;
  margin: 1rem;
}

#example-singlecycle {
  border: 1px solid black;
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;
  width: 100%;
  /* height: fit-content; */
  th {
    border: 1px dashed black;
  }
  svg {
    width: 100%;
    height: 100%;
  }
}

#example-pipelined {
  border: 1px solid black;
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;
  width: 46%;
  /* height: fit-content; */
  th {
    border: 1px dashed black;
  }
  svg {
    width: 100%;
    height: 100%;
  }
}

#example-structhazard {
  border: 1px solid black;
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;
  width: 100%;
  /* height: fit-content; */
  th {
    border: 1px dashed black;
  }
  svg {
    width: 100%;
    height: 100%;
  }
}

#structForm2 {
  display: none;
}

#colorByClick {
  user-select: none;
  g {
    cursor: pointer;
  }
}

span.frac {
  display: inline-block;
  text-align: center;
}
span.frac > sup {
  display: block;
  border-bottom: 1px solid;
  font: inherit;
}
span.frac > span {
  display: none;
}
span.frac > sub {
  display: block;
  font: inherit;
}

.coloredwire {
  stroke: #1ec3e0 !important;
  stroke-width: 0.25mm !important;
}

.coloredcomponent {
  fill: #1ec3e0 !important;
}

#exercisecontainer {
  position: relative;
  z-index: 0;
}

#forwardExerciseContainer {
  position: relative;
  z-index: 0;
  svg {
    user-select: none;
  }
}

#bubbleTable {
  width: 100%;
  height: fit-content;
  table-layout: fixed;
  svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
    user-select: none;
  }
}

#stallExampleTable,
#forwardLimitsExampleTableLeft,
#forwardLimitsExampleTableRight,
#reorderTable {
  border: 1px solid black;
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;
  width: 100%;
  height: fit-content;
  th {
    border: 1px dashed black;
  }
  svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
}

#stallTable,
#forwardExerciseTable {
  border: 1px solid black;
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;
  width: 100%;
  height: fit-content;
  th {
    border: 1px dashed black;
  }
  svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
    user-select: none;
  }
}

#stallTableBody,
#bubbleTableBody {
  position: relative;
}

.offsetBefore,
.offsetAfter {
  background-color: transparent;
}
