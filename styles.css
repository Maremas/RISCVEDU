* {
  font-family: Montserrat, sans-serif;
}

body {
  margin: 0;
}

footer {
  padding: 0.5rem;
  box-sizing: border-box;
}

:root {
  --clr-back: #ddd;
}

.nav {
  /* declaration of navbar animation parameters */
  --_animationStartsAfter: 100px;
  --_animationDistance: 250px;
  --_surfaceColorStart: hsl(0 10% 5%);
  --_surfaceColorEnd: hsl(0 50% 100%);
  --_textColorStart: hsl(0 10% 90%);
  --_textColorEnd: hsl(0 10% 10%);
  color: var(--_textColorStart);
  background-color: var(--_surfaceColorStart);
  padding: 0 1%; /* padding: top/bottom left/right */
  font-size: 1.2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-flow: row wrap;
  position: sticky;
  z-index: 1000;
  top: 0;
  animation: stickyNav linear forwards;

  @supports (animation-timeline: view()) {
    animation-timeline: view();
    animation-range-start: calc(100vh + var(--_animationStartsAfter));
    animation-range-end: calc(
      100vh + var(--_animationStartsAfter) + var(--_animationDistance)
    );
  }
  /* animation of  navbar logo, but only change one color filling */
  .logo {
    height: 20px;
    /*.st0 {
      fill: currentColor;
    }*/
    .st1 {
      fill: currentColor;
    }
  }

  a {
    color: inherit;
    font-weight: bold;
    text-decoration: none;

    /* make clickable text area bigger by creating box around it*/
    display: inline-block;
    position: relative;
    z-index: 1;
    padding: 10px;
    margin: -10px;

    &:hover,
    &:focus {
      color: grey;
      text-decoration: none;
    }
  }

  .navlist {
    display: flex;
    li {
      list-style: none;
      position: relative;
      padding: 0 10px; /* padding: top/bottom left/right */

      ul {
        display: none;
        position: absolute;
      }
    }

    .selected {
      color: orange;
    }

    /*dropdown menu organized as unordered list nav li ul li ul*/
    li:hover ul {
      display: flex;
      position: absolute;
      flex-direction: column;
      padding: 10px;
      left: -10px;
      gap: 10px;
      color: var(--_textColorStart);
      background-color: var(--_surfaceColorStart);
      animation: stickyNav linear forwards;

      @supports (animation-timeline: view()) {
        animation-timeline: view();
        animation-range-start: calc(100vh + var(--_animationStartsAfter));
        animation-range-end: calc(
          100vh + var(--_animationStartsAfter) + var(--_animationDistance)
        );
      }
    }
  }
}

@keyframes stickyNav {
  100% {
    color: var(--_textColorEnd);
    background-color: var(--_surfaceColorEnd);
    box-shadow: 0 0 0.75rem hsl(0 0% 0% / 0.3);
  }
}

/*from here on flex containers */
.flexcontainer {
  height: 400px;
  display: flex; /* convert into flexbox container*/
  justify-content: space-evenly;
  align-items: stretch;
  flex-flow: row wrap; /*first arg: flex-direction, second arg: flex-wrap*/
  align-content: space-evenly;
}

.flexitem {
  width: 150px;
  height: 150px;
  /*flex-basis: 35px;*/
}

.flexitem:nth-child(1) {
  background-color: red;
  min-width: 300px;
  min-height: 500px;
}

.flexitem:nth-child(2) {
  background-color: green;
}

.flexitem:nth-child(3) {
  background-color: blue;
  min-width: 500px;
  min-height: 250px;
}

.flexitem:nth-child(4) {
  background-color: yellow;
  min-width: 500px;
  min-height: 500px;
  order: 1;
}

.flexitem:nth-child(5) {
  background-color: purple;
}

.flexitem:nth-child(6) {
  background-color: orange;
}

/* from here on grid containers */
.gridcontainerstandard {
  display: grid;
  margin: 1rem;
  gap: 1rem;
  grid-auto-columns: 1fr;
  padding-block: 2rem;
  grid-template-columns: repeat(2, 1fr);
}

.gridcontainersim {
  display: grid;
  margin: 1rem;
  gap: 1rem;
  grid-auto-columns: 1fr;
  padding-block: 2rem;
  grid-template-areas:
    "one one two two seven"
    "one one three three three"
    "four four four five six"
    "four four four . .";
}

/* threshold for displaying grid items in desktop layout, for mobile layout see default above */
@media screen and (max-width: 800px) {
  .gridcontainersim {
    grid-template-areas:
      "one"
      "two"
      "three"
      "seven"
      "four"
      "five"
      "six";
  }
  .gridcontainerstandard {
    grid-template-columns: repeat(1, 1fr);
  }
}

.griditem {
  min-width: 100px;
  min-height: 100px;
  color: black;
  padding: 1rem;
  border-radius: 0.5rem;
}

.testgriditem {
  color: black;
  padding: 1rem;
  border-radius: 0.5rem;
  background-color: aqua;
}

.griditem:nth-child(1) {
  grid-area: one;
  background-color: red;
}
.griditem:nth-child(2) {
  grid-area: two;
  background-color: green;
}
.griditem:nth-child(3) {
  grid-area: three;
  background-color: blue;
}
.griditem:nth-child(4) {
  grid-area: four;
  background-color: yellow;
  min-height: 500px;
}
.griditem:nth-child(5) {
  grid-area: five;
  background-color: purple;
}

.griditem:nth-child(6) {
  grid-area: six;
  background-color: orange;
}
.griditem:nth-child(7) {
  grid-area: seven;
  background-color: grey;
}
